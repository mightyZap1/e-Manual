import{_ as s,C as l,c,o as h,a2 as d,j as e,G as r,a as o,w as i}from"./chunks/framework.DfL7K9Ap.js";const n="/assets/CautionMotionSync_ENG.CgflXBtb.png",m="/assets/Broken_Rod_ENG.Dk7N8n7y.png",u="/assets/UseSpanner.DB6UdYcg.png",p="/assets/12Lf_Standard_Accessories.B1Decoaj.png",g="/assets/Rod_end_tip_M3Nut.7I-uX5lZ.png",b="/assets/Applications_FactoryAutomation.B2bIznR5.png",f="/assets/Applications_GeneralUsage.C0HjClf7.png",x="/assets/Applications_Robotics.Bl5rpLXi.png",v="/assets/Applications_UAV_Drone.BCMxDFxJ.png",y="/assets/Applications_Medical.Cq-u1YaK.png",k="/assets/Applications_OtherUsage.B6cUDqXZ.png",F="/assets/CircuitConnection_TTL_ENG.Dof_yQg5.png",D="/assets/CircuitConnection_RS485.DTZ2FlVe.png",P="/assets/Communication_MainController.B0aafGoZ.png",w="/assets/Commu_spec_PWMPulseMode.DYDFVy0B.png",C="/assets/DaisyChainConnection_ENG.rHIiAyJt.png",S="/assets/Packet_Command.BLM1xCrn.png",R="/assets/Packet_Feedback.BOzSCRWu.png",I="/assets/StrokeLimit.BF70RupJ.png",A="/assets/DataDescription_AccelerationDeceleration.eupwJcWN.png",_="/assets/Min.MaxPositionCalibration.4lXPrF_I.png",E="/assets/ACC_IR-MB02.C_j64xXK.png",T="/assets/ACC_IR-MB03.BDTUQ0Pb.png",M="/assets/ACC_IR-MB04.gIZyRKJz.png",q="/assets/ACC_IR-USB02.CVHbfI--.png",L="/assets/mightyZAPManager.CUXolqGs.png",O="/assets/ACC_IR-EB01_ENG.Bg9PqkR2.png",N="/assets/ACC_IR-CT01.DL6zhyS5.png",B="/assets/ACC_IR-STS02_ENG.BvF79lIf.png",W="/assets/ACC_IR-EW00.BMZW_aQf.png",H="/assets/ACC_IR_GT01.CSH9QMgh.png",st=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/actuator/D7D12L12/Manual/D7D12L12_Manual.md","filePath":"en/actuator/D7D12L12/Manual/D7D12L12_Manual.md","lastUpdated":null}'),V={name:"en/actuator/D7D12L12/Manual/D7D12L12_Manual.md"},G={class:"warning custom-block github-alert"},U={class:"custom-block-title"},z={id:"■-ttl-pwm-3pin-connector-model-l-d-xx-xxpt-x-series",tabindex:"-1"},Z={id:"■-rs-485-4pin-connector-model-lxx-xxf-x-series",tabindex:"-1"},j={class:"warning custom-block github-alert"},Y={class:"custom-block-title"},J={class:"warning custom-block github-alert"},K={class:"custom-block-title"},X={style:{background:"rgba(92, 92, 92, 0.2)"}},Q={style:{background:"rgba(92, 92, 92, 0.2)"}},$={class:"warning custom-block github-alert"},tt={class:"custom-block-title"};function et(ot,t,at,rt,it,dt){const a=l("font");return h(),c("div",null,[t[32]||(t[32]=d("",37)),e("div",G,[e("p",U,[r(a,{size:"5"},{default:i(()=>t[0]||(t[0]=[o("CAUTION")])),_:1,__:[0]}),t[1]||(t[1]=o(" - Use within Rated Load"))]),t[2]||(t[2]=e("p",null,"For proper performance and better lifespan of mightZAP, it is stronlgy requested to use it within the rated load range.",-1))]),t[33]||(t[33]=d("",46)),e("p",null,[t[4]||(t[4]=o("mightyZAP Lxx-xx")),r(a,{color:"#ff0000"},{default:i(()=>t[3]||(t[3]=[o("PT")])),_:1,__:[3]}),t[5]||(t[5]=o("-xx Series supports both data communication(Half Duplux TTL) as well as simple pulse(PWM) control. For the control under data communication, UART signal of main board should be converted into Half Duplex Type signal. Conversion circuit will be as below."))]),e("h4",z,[t[7]||(t[7]=o("■ TTL/PWM(3Pin Connector-Model L(D)xx-xx")),r(a,{color:"#ff0000"},{default:i(()=>t[6]||(t[6]=[o("PT")])),_:1,__:[6]}),t[8]||(t[8]=o("-x Series) ")),t[9]||(t[9]=e("a",{class:"header-anchor",href:"#■-ttl-pwm-3pin-connector-model-l-d-xx-xxpt-x-series","aria-label":'Permalink to "■ TTL/PWM(3Pin Connector-Model L(D)xx-xx<font color="#ff0000">PT</font>-x Series)"'},"​",-1))]),t[34]||(t[34]=e("p",null,[e("img",{src:F,alt:"CircuitConnection_TTL"}),o(" The direction of data signal for TxD and RxD of TTL level will be determined according to the level of direction_port as below.")],-1)),t[35]||(t[35]=e("ul",null,[e("li",null,'The level of "direction_port" is LOW :Data signal will be inputted to RxD.'),e("li",null,[o('The level of "direction_port" is HIGH :TxD signal will be outputted as Data. '),e("strong",null,"※ Both GNDs between actuator and controller should be connected as above diagram.")])],-1)),t[36]||(t[36]=e("div",{class:"note custom-block github-alert"},[e("p",{class:"custom-block-title"},"NOTE"),e("p",null,"※ For PWM control, please connect PWM signal(3~5V) to the Data pin above. (GND,VDD are same as above) ※ In case of using PWM communication, position control is possible, but feedback data such as the current position value cannot be received, and serial daisy chain connection is not supported since data communication is not supported.")],-1)),e("h4",Z,[t[11]||(t[11]=o("■ RS-485(4Pin Connector - Model Lxx-xx")),r(a,{color:"#ff0000"},{default:i(()=>t[10]||(t[10]=[o("F")])),_:1,__:[10]}),t[12]||(t[12]=o("-x Series) ")),t[13]||(t[13]=e("a",{class:"header-anchor",href:"#■-rs-485-4pin-connector-model-lxx-xxf-x-series","aria-label":'Permalink to "■ RS-485(4Pin Connector - Model Lxx-xx<font color="#ff0000">F</font>-x Series)"'},"​",-1))]),e("p",null,[t[15]||(t[15]=o("Model Lxx-xx")),r(a,{color:"#ff0000"},{default:i(()=>t[14]||(t[14]=[o("F")])),_:1,__:[14]}),t[16]||(t[16]=o("-x Series uses RS-485 communication. Pin map and Conversion circuit will be as below."))]),t[37]||(t[37]=d("",10)),e("div",j,[e("p",Y,[r(a,{size:"5"},{default:i(()=>t[17]||(t[17]=[o("CAUTION")])),_:1,__:[17]})]),t[22]||(t[22]=e("p",null,null,-1)),e("ul",null,[t[19]||(t[19]=e("li",null,"mightyZAP uses half duplex communication, and need to put proper delay time to prevent communication error.",-1)),e("li",null,[r(a,{color:"#ff0000"},{default:i(()=>t[18]||(t[18]=[o("**Recommendable delay time is 5msec for data write, 10msec for data read.**")])),_:1,__:[18]})]),t[20]||(t[20]=e("li",null,"Otherwise, there can be communication collision and motor failure.",-1)),t[21]||(t[21]=e("li",null,"Above delay time is not minimum, but proper delay time for safety.",-1))])]),t[38]||(t[38]=d("",9)),e("div",J,[e("p",K,[r(a,{size:"5"},{default:i(()=>t[23]||(t[23]=[o("CAUTION")])),_:1,__:[23]}),t[24]||(t[24]=o(" - Unique ID"))]),t[25]||(t[25]=e("p",null,null,-1)),t[26]||(t[26]=e("ul",null,[e("li",null,"Each mightZAP servo must have an individual ID to prevent interference between same IDs. Therefore, you need to set individual IDs for each servo in the network node."),e("li",null,"User may assign 253 different IDs and connect 253pcs servos in serial via TTL protocol. For RS485 protocol, 253 IDs can be assigned, but available serial connection is upto 32pcs servo motors due to RS-485 node regulation."),e("li",null,"As factory default ID is 0, so please assign different, individual IDs for each actuator from ID1~253 for daisy chain connection.")],-1))]),t[39]||(t[39]=d("",29)),e("p",null,[e("span",X,[r(a,{size:"5"},{default:i(()=>t[27]||(t[27]=[o("Non-Volatile Memory")])),_:1,__:[27]})])]),t[40]||(t[40]=d("",59)),e("p",null,[e("span",Q,[r(a,{size:"5"},{default:i(()=>t[28]||(t[28]=[o("Volatile Memory")])),_:1,__:[28]})])]),t[41]||(t[41]=d("",119)),e("div",$,[e("p",tt,[r(a,{size:"5"},{default:i(()=>t[29]||(t[29]=[o("CAUTION")])),_:1,__:[29]}),t[30]||(t[30]=o(" - Motion Synchronization of multiple actuators"))]),t[31]||(t[31]=e("p",null,[e("u",null,"It is strictly banned to use multiple qty actuators for single objective."),o(" Due to DC motor characteristic, each actuator’s speed can be slightly varied even if they are same model and goal position is same. (may cause overload to one of actuator)")],-1))]),t[42]||(t[42]=d("",29))])}const lt=s(V,[["render",et]]);export{st as __pageData,lt as default};
