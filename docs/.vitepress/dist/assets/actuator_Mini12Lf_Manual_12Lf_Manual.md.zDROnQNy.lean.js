import{_ as i,C as n,c as s,o as h,j as d,G as e,a2 as l,a as r,w as o}from"./chunks/framework.DSqgMOff.js";const c="/assets/CautionMotionSync.BbhMz1bl.png",u="/assets/Broken_Rod.DFUQFIA9.png",m="/assets/UseSpanner.DB6UdYcg.png",p="/assets/12Lf_Standard_Accessories.B1Decoaj.png",b="/assets/Rod_end_tip_M3Nut.7I-uX5lZ.png",_="/assets/Applications_FactoryAutomation.B2bIznR5.png",f="/assets/Applications_GeneralUsage.C0HjClf7.png",P="/assets/Applications_Robotics.Bl5rpLXi.png",x="/assets/Applications_UAV_Drone.BCMxDFxJ.png",g="/assets/Applications_Medical.Cq-u1YaK.png",R="/assets/Applications_OtherUsage.B6cUDqXZ.png",S="/assets/CircuitConnection_TTL.CgKwvPB1.png",C="/assets/CircuitConnection_RS485.DTZ2FlVe.png",k="/assets/Communication_MainController.B0aafGoZ.png",D="/assets/Commu_spec_PWMPulseMode.DYDFVy0B.png",L="/assets/DaisyChainConnection.DdaYH476.png",M="/assets/StrokeLimit.BF70RupJ.png",T="/assets/DataDescription_AccelerationDeceleration.eupwJcWN.png",I="/assets/Min.MaxPositionCalibration.4lXPrF_I.png",A="/assets/ACC_IR-MB02.C_j64xXK.png",q="/assets/ACC_IR-MB03.BDTUQ0Pb.png",N="/assets/ACC_IR-MB04.gIZyRKJz.png",F="/assets/ACC_IR-USB02.CVHbfI--.png",O="/assets/mightyZAPManager.CUXolqGs.png",v="/assets/ACC_IR-EB01.BGUSyLKk.png",y="/assets/ACC_IR-CT01.DL6zhyS5.png",E="/assets/ACC_IR-STS02.iHHN3_2P.png",w="/assets/ACC_IR-EW00.BMZW_aQf.png",W="/assets/ACC_IR_GT01.CSH9QMgh.png",j=JSON.parse('{"title":"12Lf Manual","description":"","frontmatter":{"slug":"12Lf_Manual.md","title":"12Lf Manual","modified":null,"version":null},"headers":[],"relativePath":"actuator/Mini12Lf/Manual/12Lf_Manual.md","filePath":"actuator/Mini12Lf/Manual/12Lf_Manual.md","lastUpdated":1755593825000}'),G={name:"actuator/Mini12Lf/Manual/12Lf_Manual.md"},V={id:"_1-4-과부하-조건-과부하-overload-보호-기능",tabindex:"-1"},B={class:"custom-block warning"},H={class:"custom-block-title"};function U(Z,t,z,X,K,Y){const a=n("font");return h(),s("div",null,[t[23]||(t[23]=d("h1",{id:"mightyzap-12lf-user-manual",tabindex:"-1"},[r("mightyZAP 12Lf User Manual "),d("a",{class:"header-anchor",href:"#mightyzap-12lf-user-manual","aria-label":'Permalink to "mightyZAP 12Lf User Manual"'},"​")],-1)),e(a,{color:"#ff0000"},{default:o(()=>t[0]||(t[0]=[r("제품군을 확인하세요! ")])),_:1,__:[0]}),e(a,{color:"#ff0000"},{default:o(()=>t[1]||(t[1]=[r("모델번호가 12Lf-로 시작하나요? ")])),_:1,__:[1]}),t[24]||(t[24]=l("",7)),e(a,{color:"#ff0000"},{default:o(()=>t[2]||(t[2]=[d("b",null,"⚠ 아래 주의 사항은 사용 시 각별히 주의를 요하는 사항이므로, 반드시 숙지를 하여 주십시오. 아래 사항을 준수하지 못해 발생한 문제에 대해서는 보증 서비스를 받을 수 없음을 알려드립니다. ",-1)])),_:1,__:[2]}),t[25]||(t[25]=l("",4)),d("h3",V,[e(a,{color:"red"},{default:o(()=>t[3]||(t[3]=[r("1.4. 과부하 조건 / 과부하 (Overload) 보호 기능")])),_:1,__:[3]}),t[4]||(t[4]=r()),t[5]||(t[5]=d("a",{class:"header-anchor",href:"#_1-4-과부하-조건-과부하-overload-보호-기능","aria-label":'Permalink to "<font color="red">1.4. 과부하 조건 / 과부하 (Overload) 보호 기능</font>"'},"​",-1))]),t[26]||(t[26]=l("",68)),d("div",B,[d("p",H,[e(a,{size:"5"},{default:o(()=>t[6]||(t[6]=[d("b",null,"주의",-1)])),_:1,__:[6]}),t[8]||(t[8]=r()),e(a,{size:"4",color:"#555"},{default:o(()=>t[7]||(t[7]=[d("b",null,"안정적인 통신을 위한 지연 시간",-1)])),_:1,__:[7]})]),t[9]||(t[9]=d("p",null,"MightyZap은 반이중 통신 방식으로, 데이터 읽고 쓰기 중 데이터 충돌이 나지 않도록, 데이터 쓰기 중에는 5msec, 데이터 읽어오기 중에는 10msec 정도의 지연 시간을 주어야 안정적으로 통신을 할 수 있습니다. 해당 지연시간을 지키지 않을 경우 통신 충돌로 인한 서보액츄에이터의 이상동작이 발생할 수 있습니다. 위의 지연시간은 최소 지연시간이 아닌 안전을 고려한 적정 지연 시간입니다",-1))]),t[27]||(t[27]=d("ul",null,[d("li",null,[r("PWM Pulse Mode PPM(Pulse Position Modulation) Compatible (Radio-Control Servo Pulse Mode) 흔히,RC용 서보에 사용하는 Pulse 규격을 사용합니다. 위치명령이 가능하지만, 여타 피드백 데이터는 없습니다."),d("br"),d("img",{src:D,alt:"Commu_spec_PWMPulseMode"})])],-1)),e(a,{color:"#ff0000"},{default:o(()=>t[10]||(t[10]=[r("※ Period (8ms~23ms) 20ms 추천 ")])),_:1,__:[10]}),t[28]||(t[28]=l("",17)),e(a,{color:"#ff0000"},{default:o(()=>t[11]||(t[11]=[r("펌웨어 V2.0이상부터 적용 ")])),_:1,__:[11]}),t[29]||(t[29]=r()),t[30]||(t[30]=d("h4",{id:"_4-3-2-modbus-rtu",tabindex:"-1"},[r("4.3.2 MODBUS RTU "),d("a",{class:"header-anchor",href:"#_4-3-2-modbus-rtu","aria-label":'Permalink to "4.3.2 MODBUS RTU"'},"​")],-1)),t[31]||(t[31]=d("ul",null,[d("li",null,"산업 표준화 프로토콜인 [Modbus RTU]] Protocol 을 사용한 제어 Data Map 입니다."),d("li",null,"해당 모델은 Readd Single Register(0x03)와 Write Holding Register(0x06)만 사용 가능합니다."),d("li",null,"Reset명령 수행 시 모든 데이터는 Default값으로 설정되게 됩니다.")],-1)),e(a,{size:"4"},{default:o(()=>t[12]||(t[12]=[d("b",null,"Memory 사용 데이터 (Non-volatile)",-1)])),_:1,__:[12]}),t[32]||(t[32]=l("",2)),e(a,{size:"4"},{default:o(()=>t[13]||(t[13]=[d("b",null,"Parameter 사용 데이터(Volatile)",-1)])),_:1,__:[13]}),t[33]||(t[33]=l("",4)),e(a,{size:"16"},{default:o(()=>t[14]||(t[14]=[r("[Non-Volatile Memory]")])),_:1,__:[14]}),t[34]||(t[34]=l("",17)),d("table",null,[t[21]||(t[21]=d("thead",null,[d("tr",null,[d("th",null,"설정값"),d("th",null,"Protocol"),d("th",null,"설명")])],-1)),d("tbody",null,[d("tr",null,[t[18]||(t[18]=d("td",null,"0 (0x00)",-1)),t[19]||(t[19]=d("td",null,"Modbus RTU",-1)),d("td",null,[t[16]||(t[16]=r("산업용 RS485 표준 통신 Protocol")),t[17]||(t[17]=d("br",null,null,-1)),e(a,{color:"#ff0000"},{default:o(()=>t[15]||(t[15]=[r("※별도의 Modbus Protocol 사용자 매뉴얼을 참조하세요")])),_:1,__:[15]})])]),t[20]||(t[20]=d("tr",null,[d("td",null,"1(0x01)"),d("td",null,"IR Protocol"),d("td",null,"IRROBOT 자체 통신  Protocol")],-1))])]),t[35]||(t[35]=l("",49)),e(a,{size:"16"},{default:o(()=>t[22]||(t[22]=[r("[Volatile Memory]")])),_:1,__:[22]}),t[36]||(t[36]=l("",47))])}const Q=i(G,[["render",U]]);export{j as __pageData,Q as default};
